openapi: 3.0.1
info:
  title: DIVERA 24/7 RESTful Webservice
  description: "Die API von DIVERA 24/7 bietet zahlreiche Möglichkeiten, um eigene Dienste anzubinden und Aktionen auszulösen. Für Testzwecke empfehlen wir Ihnen, eine separate Einheit anzulegen. Testeinheiten von zahlenden Kunden werden auf Nachfrage kostenfrei hochgestuft.
    \n\nBeachten Sie als Nutzer der kostenlosen Version: Innerhalb von fünf Minuten kann nur eine Alarmierung ausgelöst werden.
    Gespeichert wird nur das Einsatz-Stichwort.
    Sie können die ALARM-Version mit unbegrenzter Schnittstelle unverbindlich 30 Tage lang testen.
    Den Test beantragen Sie nach dem Login im Browser unter Verwaltung > Konto > Kontakt- und Vertragsdaten."
  version: R
servers:
  - url: https://app.divera247.com
tags:
  - name: Login
    description: Authentifizierung gegenüber der API
paths:
  /api/v2/auth/login:
    post:
      tags:
        - Login
      summary: Authentifizieren für Nutzerdaten
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                Login:
                  type: object
                  properties:
                    username:
                      name: E-Mail-Adresse
                      required: true
                      type: string
                      example: heinz.meinz@musterstadt.de
                    password:
                      name: Passwort
                      required: true
                      type: string
                    jwt:
                      name: Optional JWT abfragen
                      required: false
                      type: boolean
                      example: FALSE
      responses:
        200:
          description: Rückgabewert bei erfolgreicher Anmeldung wie auch bei Fehlern (errors beachten)
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: TRUE
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          access_token:
                            type: string
                            description: API-Accesskey für alle weiteren Requests
                          autologin:
                            type: boolean
                            description: Definiert, ob der automatische Login im Browser erlaubt ist. Dient primär dem Monitor-Benutzer einer Einheit.
                          auth_key:
                            type: string
                            description: Schlüssel für den Autologin eines Monitor-Benutzers.
                          default_user_cluster_relation:
                            type: integer
                            description: UserClusterRelation (kurz 'UCR') steht für die Verknüpfung eines Benutzers mit einer Einheit. Über default_user_cluster_relation wird bestimmt, welche UCR nach dem Login initialisiert wird.
                      ucr:
                        type: object
                        description: Enthält alle Verknüpfungen eines Anwenders zu seinen Einheiten.
                      errors:
                        type: object
                        properties:
                          username:
                            type: string
                          password:
                            type: string
  /api/v2/auth/jwt:
    get:
      tags:
        - Login
      summary: JSON Web Token (JWT) abfragen.
      responses:
        200:
          description: Den JWT im Rückgabewert als Bearer Token verwenden. Die Gültigkeit beträgt 7 Tage, daraufhin erfolgt Fehler-Code 401.
          content:
            'application/json':
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: TRUE
                  data:
                    type: object
                    properties:
                      jwt:
                        type: string
        403:
          description: Accesskey fehlt oder ungültig
          content: {}
      security:
        - Personal-API-Accesskey: []
components:
  securitySchemes:
    Personal-API-Accesskey:
      type: apiKey
      name: accesskey
      in: query
